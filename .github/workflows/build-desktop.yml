name: Wails build

on:
  push:
    branches:
      - main
      - add-desktop
    # tags:
    #   - '*'

env:
  NODE_OPTIONS: "--max-old-space-size=4096"

jobs:
  build:
    strategy:
    # Failure in one platform build won't impact the others
      fail-fast: false
      matrix:
        build:
          # - name: 'excaliapp'
          #   platform:  'linux/amd64'
          #   os: 'ubuntu-latest'
          - name: 'excaliapp'
            platform:  'windows/amd64'
            os: 'windows-2025'
          # - name: 'excaliapp'
          #   platform:  'darwin/universal'
          #   os: 'macos-latest'

    runs-on: ${{ matrix.build.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive
      
      - name: Setup node
        uses: actions/setup-node@v4
        with:
          node-version: '22'
      
      - name: Install and build
        run: |
          npm i -g bun
          bun install
          bun run build:wails

      - name: Build wails
        uses: dAppServer/wails-build-action@main
        id: buildother
        if: matrix.build.platform != 'windows/amd64'
        with:
          build-name: ${{ matrix.build.name }}
          build-platform: ${{ matrix.build.platform }}
          package: false
          go-version: '1.24.2'

      - name: Build wails
        uses: dAppServer/wails-build-action@main
        id: build
        if: matrix.build.platform == 'windows/amd64'
        with:
          build-name: ${{ matrix.build.name }}.exe
          build-platform: ${{ matrix.build.platform }}
          package: false
          go-version: '1.24.2'
      
      - name: Save artifacts
        uses: actions/upload-artifact@v4
        with:
          name: windows-presign
          path: build/bin/

      - name: Fetch AzureSignTool
        if: matrix.build.platform == 'windows/amd64'
        run: |
          $ErrorActionPreference = "Stop"
          Invoke-WebRequest -Uri "https://github.com/OSSign/goast/releases/latest/download/azuresigntool.exe" -OutFile "D:\a\azuresigntool.exe"
          ls .\build\bin\

      - name: Sign files
        uses: ossign/gha-sign-azuresigntool@main
        if: matrix.build.platform == 'windows/amd64'
        with:
          certificateName: ${{ secrets.AST_CERT }}
          clientId: ${{ secrets.AST_IDENT }}
          clientSecret: ${{ secrets.AST_SECRET }}
          tenantId: ${{ secrets.AST_TENANT }}
          hashAlgorithm: ${{ secrets.AST_TD }}
          timestampUrl: ${{ secrets.AST_TIMESTAMP }}
          vaultUrl: ${{ secrets.AST_VAULT }}
          files: build/bin/*
          extensions: exe;msi
      
      - name: Build NSIS installer
        if: matrix.build.platform == 'windows/amd64'
        run: |
          $ProgressPreference = 'SilentlyContinue'
          Invoke-WebRequest https://deac-riga.dl.sourceforge.net/project/nsis/NSIS%203/3.10/nsis-3.10-setup.exe?viasf=1 -OutFile .\nsis-3.10-setup.exe
          $process = Start-Process ".\nsis-3.10-setup.exe" -ArgumentList "/S" -Wait -PassThru
          $exitCode = $process.ExitCode
          if ($exitCode -eq 0) {
              Write-Host "Installer ran successfully."
          } else {
              Write-Host "Installer failed with exit code $exitCode."
              exit $exitCode
          }

          echo "C:\Program Files (x86)\NSIS\Bin" | Out-File -FilePath "$env:GITHUB_PATH" -Append
          echo "C:\Program Files (x86)\NSIS" | Out-File -FilePath "$env:GITHUB_PATH" -Append

          $env:PATH += ";C:\Program Files (x86)\NSIS\Bin;C:\Program Files (x86)\NSIS"
          Write-Host "PATH updated to include NSIS."
          ls "C:\Program Files (x86)\NSIS\"
          ls "C:\Program Files (x86)\NSIS\Bin\"

          makensis.exe "-DARG_WAILS_AMD64_BINARY=..\..\bin\excaliapp.exe" ".\build\windows\installer\project.nsi"          
      
      - name: Save artifacts
        uses: actions/upload-artifact@v4
        with:
          name: windows
          path: build/bin/